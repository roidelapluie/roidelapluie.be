---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: roidelapluie-website
  labels:
    repo: roidelapluie.be
spec:
  replicas: 2
  template:
    metadata:
      labels:
        website: roidelapluie.be
        app: nginx
        version: '2'
        ssl: 'no'
        repo: roidelapluie.be
    spec:
      nodeName: aci-connector
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: git-repo
          subPath: roidelapluie.be-output
      volumes:
      - name: git-repo
        gitRepo:
          repository: "https://github.com/roidelapluie/roidelapluie.be-output"
          revision: "master"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: roidelapluie-website-red
  labels:
    repo: roidelapluie.be
spec:
  replicas: 100
  template:
    metadata:
      labels:
        website: roidelapluie.be
        app: nginx
        version: '2'
        ssl: 'no'
        repo: roidelapluie.be
    spec:
      nodeName: aci-connector
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: git-repo
          subPath: roidelapluie.be-output
      volumes:
      - name: git-repo
        gitRepo:
          repository: "https://github.com/roidelapluie/roidelapluie.be-output"
          revision: "red"
---
kind: Service
apiVersion: v1
metadata:
  name: roidelapluie-website
  labels:
    repo: roidelapluie.be
spec:
  selector:
    website: roidelapluie.be
    ssl: 'yes'
  ports:
  - protocol: TCP
    port: 80
    name: http
  - protocol: TCP
    port: 443
    name: https
  type: LoadBalancer
---
kind: Service
apiVersion: v1
metadata:
  name: roidelapluie-website-nossl
  labels:
    repo: roidelapluie.be
  annotations:
    traefik.backend.loadbalancer.sticky: "false"
spec:
  selector:
    website: roidelapluie.be
    ssl: 'no'
  ports:
  - protocol: TCP
    port: 80
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: traefik
  labels:
    repo: roidelapluie.be
spec:
  replicas: 1
  template:
    metadata:
      labels:
        website: roidelapluie.be
        app: traefik
        version: '1'
        ssl: 'yes'
        repo: roidelapluie.be
    spec:
      containers:
      - name: traefik
        image: traefik:1.3-alpine
        args: [""]
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/traefik
          name: traefikconf
        - mountPath: /etc/traefik-ssl
          name: traefikssl
      volumes:
      - name: traefikssl
        persistentVolumeClaim:
          claimName: sslcerts
      - name: traefikconf
        configMap:
          name: traefik
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik
  labels:
    repo: roidelapluie.be
data:
  traefik.toml: |
    defaultEntryPoints = ["http", "https"]
    logLevel = "DEBUG"
    [entryPoints]
    [entryPoints.http]
    address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
    [entryPoints.https]
    address = ":443"
    [entryPoints.https.tls]
    [acme]
    email = "roidelapluie@roidelapluie.be"
    storage = "/etc/traefik-ssl/acme.json"
    entryPoint = "https"
    onDemand = true
    onHostRule = true
    [[acme.domains]]
    main = "kube.roidelapluie.be"
    [kubernetes]
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sslcerts
  labels:
    repo: roidelapluie.be
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: default
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: roidelapluie.be
  annotations:
    kubernetes.io/ingress.class: traefik
  labels:
    repo: roidelapluie.be
spec:
  rules:
  - host: kube.roidelapluie.be
    http:
      paths:
      - path: /
        backend:
          serviceName: roidelapluie-website-nossl
          servicePort: 80
